{
    "openapi": "3.0.3",
    "info": {
      "title": "Swagger Lanchonete - OpenAPI 3.0",
      "description": "Este é um exemplo de uma aplicação para gerenciamento de pedidos de uma lanchonete utilizando os conceitos de Clean Architecture.",
      "contact": {
        "email": "devairft@gmail.com"
      },
      "version": "1.0.11"
    },
    "tags": [
      {
        "name": "categories",
        "description": "Everything about categories"
      },
      {
        "name": "products",
        "description": "Everything about products"
      },
      {
        "name": "customers",
        "description": "Everything about customers"
      },
      {
        "name": "orders",
        "description": "Everything about orders"
      }
    ],
    "paths": {
      "/api/v1/categories": {
        "post": {
          "tags": [
            "categories"
          ],
          "summary": "Add a new category",
          "description": "Add a new category",
          "operationId": "addcategories",
          "requestBody": {
            "description": "Create a new category",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "name",
                    "desctiption"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "drik"
                    },
                    "description": {
                      "type": "string",
                      "example": "cold drik"
                    }
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "name": {
                        "type": "string",
                        "example": "drik"
                      },
                      "description": {
                        "type": "string",
                        "example": "cold drik"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Server error"
            }
          }
        },
        "get": {
          "tags": [
            "categories"
          ],
          "summary": "List categories",
          "description": "List categories",
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "drik"
                        },
                        "description": {
                          "type": "string",
                          "example": "cold drik"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/categories/{categoryId}": {
        "get": {
          "tags": [
            "categories"
          ],
          "summary": "Find category by ID",
          "description": "Returns a single category",
          "parameters": [
            {
              "name": "categoryId",
              "in": "path",
              "description": "ID of category to return",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "name": {
                        "type": "string",
                        "example": "drik"
                      },
                      "description": {
                        "type": "string",
                        "example": "cold drik"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Server error"
            }
          }
        },
        "put": {
          "tags": [
            "categories"
          ],
          "summary": "Update category",
          "description": "Update category.",
          "operationId": "updateCategory",
          "parameters": [
            {
              "name": "categoryId",
              "in": "path",
              "description": "ID of category to update",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "Update an existent category",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "name",
                    "desctiption"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "drik"
                    },
                    "description": {
                      "type": "string",
                      "example": "cold drik"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "204": {
              "description": "No content"
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      "/api/v1/categories/search": {
        "get": {
          "tags": [
            "categories"
          ],
          "summary": "Search categories",
          "description": "Returns categories",
          "parameters": [
            {
              "name": "name",
              "in": "query",
              "description": "Name of category to return",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "drik"
                        },
                        "description": {
                          "type": "string",
                          "example": "cold drik"
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      "/api/v1/products": {
        "post": {
          "tags": [
            "products"
          ],
          "summary": "Add a new product",
          "description": "Add a new product",
          "requestBody": {
            "description": "Create a new product",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "name",
                    "code",
                    "description",
                    "categoryId",
                    "price"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "beer"
                    },
                    "code": {
                      "type": "string",
                      "example": "bear-1"
                    },
                    "categoryId": {
                      "type": "integer",
                      "example": 1
                    },
                    "price": {
                      "type": "number",
                      "example": 10
                    },
                    "image": {
                      "type": "string",
                      "example": "ssssss"
                    },
                    "description": {
                      "type": "string",
                      "example": "cold beer"
                    }
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "name": {
                        "type": "string",
                        "example": "beer"
                      },
                      "code": {
                        "type": "string",
                        "example": "bear-1"
                      },
                      "categoryId": {
                        "type": "integer",
                        "example": 1
                      },
                      "price": {
                        "type": "number",
                        "example": 10
                      },
                      "image": {
                        "type": "string",
                        "example": "ssssss"
                      },
                      "description": {
                        "type": "string",
                        "example": "cold beer"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Server error"
            }
          }
        },
        "get": {
          "tags": [
            "products"
          ],
          "summary": "List products",
          "description": "List categories",
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "beer"
                        },
                        "code": {
                          "type": "string",
                          "example": "bear-1"
                        },
                        "categoryId": {
                          "type": "integer",
                          "example": 1
                        },
                        "price": {
                          "type": "number",
                          "example": 10
                        },
                        "image": {
                          "type": "string",
                          "example": "ssssss"
                        },
                        "description": {
                          "type": "string",
                          "example": "cold beer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/products/{productId}": {
        "get": {
          "tags": [
            "products"
          ],
          "summary": "Find product by ID",
          "description": "Returns a single product",
          "parameters": [
            {
              "name": "productId",
              "in": "path",
              "description": "ID of product to return",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "name": {
                        "type": "string",
                        "example": "beer"
                      },
                      "code": {
                        "type": "string",
                        "example": "bear-1"
                      },
                      "categoryId": {
                        "type": "integer",
                        "example": 1
                      },
                      "price": {
                        "type": "number",
                        "example": 10
                      },
                      "image": {
                        "type": "string",
                        "example": "ssssss"
                      },
                      "description": {
                        "type": "string",
                        "example": "cold beer"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Server error"
            }
          }
        },
        "put": {
          "tags": [
            "products"
          ],
          "summary": "Update product",
          "description": "Update product.",
          "parameters": [
            {
              "name": "productId",
              "in": "path",
              "description": "ID of product to update",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "Update an existent product",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "name",
                    "code",
                    "description",
                    "categoryId",
                    "price"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "beer"
                    },
                    "code": {
                      "type": "string",
                      "example": "bear-1"
                    },
                    "categoryId": {
                      "type": "integer",
                      "example": 1
                    },
                    "price": {
                      "type": "number",
                      "example": 10
                    },
                    "image": {
                      "type": "string",
                      "example": "ssssss"
                    },
                    "description": {
                      "type": "string",
                      "example": "cold beer"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "204": {
              "description": "No content"
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Server error"
            }
          }
        },
        "delete": {
          "tags": [
            "products"
          ],
          "summary": "Delete product",
          "description": "Delete product.",
          "parameters": [
            {
              "name": "productId",
              "in": "path",
              "description": "ID of product to delete",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No content"
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      "/api/v1/products/search": {
        "get": {
          "tags": [
            "products"
          ],
          "summary": "Search products",
          "description": "Returns products",
          "parameters": [
            {
              "name": "name",
              "in": "query",
              "description": "Name of product to return",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "categoryName",
              "in": "query",
              "description": "Name of category to return",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "code",
              "in": "query",
              "description": "Code of product to return",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "beer"
                        },
                        "code": {
                          "type": "string",
                          "example": "bear-1"
                        },
                        "categoryId": {
                          "type": "integer",
                          "example": 1
                        },
                        "price": {
                          "type": "number",
                          "example": 10
                        },
                        "image": {
                          "type": "string",
                          "example": "ssssss"
                        },
                        "description": {
                          "type": "string",
                          "example": "cold beer"
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      "/api/v1/customers": {
        "post": {
          "tags": [
            "customers"
          ],
          "summary": "Add a new customer",
          "description": "Add a new customer",
          "requestBody": {
            "description": "Create a new customer",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "John Snow"
                    },
                    "email": {
                      "type": "string",
                      "example": "test@example.com"
                    },
                    "phone": {
                      "type": "string",
                      "example": "77899933"
                    },
                    "cpf": {
                      "type": "string",
                      "example": "12345678901"
                    }
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "name": {
                        "type": "string",
                        "example": "John Snow"
                      },
                      "email": {
                        "type": "string",
                        "example": "test@example.com"
                      },
                      "phone": {
                        "type": "string",
                        "example": "77899933"
                      },
                      "cpf": {
                        "type": "string",
                        "example": "12345678901"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Server error"
            }
          }
        },
        "get": {
          "tags": [
            "customers"
          ],
          "summary": "List customers",
          "description": "List customers",
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "John Snow"
                        },
                        "email": {
                          "type": "string",
                          "example": "test@example.com"
                        },
                        "phone": {
                          "type": "string",
                          "example": "77899933"
                        },
                        "cpf": {
                          "type": "string",
                          "example": "12345678901"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/customers/{customerId}": {
        "get": {
          "tags": [
            "customers"
          ],
          "summary": "Find customer by ID",
          "description": "Returns a single customer",
          "parameters": [
            {
              "name": "customerId",
              "in": "path",
              "description": "ID of customer to return",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "name": {
                        "type": "string",
                        "example": "John Snow"
                      },
                      "email": {
                        "type": "string",
                        "example": "test@example.com"
                      },
                      "phone": {
                        "type": "string",
                        "example": "77899933"
                      },
                      "cpf": {
                        "type": "string",
                        "example": "12345678901"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      "/api/v1/customers/search": {
        "get": {
          "tags": [
            "customers"
          ],
          "summary": "Search customers",
          "description": "Returns customers",
          "parameters": [
            {
              "name": "name",
              "in": "query",
              "description": "Name of customer to return",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "cpf",
              "in": "query",
              "description": "CPF of customer to return",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "John Snow"
                        },
                        "email": {
                          "type": "string",
                          "example": "test@example.com"
                        },
                        "phone": {
                          "type": "string",
                          "example": "77899933"
                        },
                        "cpf": {
                          "type": "string",
                          "example": "12345678901"
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      "/api/v1/customers/delete": {
        "post": {
          "tags": [
            "customers"
          ],
          "summary": "Request to delete a customer",
          "description": "Request to delete a customer",
          "requestBody": {
            "description": "Request to delete a customer",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "John Snow"
                    },
                    "address": {
                      "type": "string",
                      "example": "415 Mission Street, 3rd Floor - San Francisco, CA 94105 "
                    },
                    "phone": {
                      "type": "string",
                      "example": "1-800-664-9073"
                    }
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "name": {
                        "type": "string",
                        "example": "John Snow"
                      },
                      "address": {
                        "type": "string",
                        "example": "415 Mission Street, 3rd Floor - San Francisco, CA 94105 "
                      },
                      "phone": {
                        "type": "string",
                        "example": "77899933"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      "/api/v1/orders": {
        "post": {
          "tags": [
            "orders"
          ],
          "summary": "Add a new order",
          "description": "Add a new order",
          "requestBody": {
            "description": "Create a new order",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "customer": {
                      "type": "object",
                      "properties": {
                        "cpf": {
                          "type": "string",
                          "example": "12345678901"
                        }
                      }
                    },
                    "orderItems": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "product": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string",
                                "example": "prod-1"
                              }
                            }
                          },
                          "quantity": {
                            "type": "number",
                            "example": 1
                          },
                          "unitPrice": {
                            "type": "number",
                            "example": 10
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "status": {
                        "type": "string",
                        "example": "Aguardando pagamento"
                      },
                      "amount": {
                        "type": "number",
                        "example": 10
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Server error"
            }
          }
        },
        "get": {
          "tags": [
            "orders"
          ],
          "summary": "List orders",
          "description": "List orders with the follow status: Em preparação, Pronto, Recebido",
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "status": {
                          "type": "string",
                          "example": "Recebido"
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2024-03-01T00:00:00.359Z"
                        },
                        "amount": {
                          "type": "number",
                          "example": 10
                        },
                        "customerId": {
                          "type": "integer",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/orders/{orderId}": {
        "get": {
          "tags": [
            "orders"
          ],
          "summary": "Find order by ID",
          "description": "Returns a single order",
          "parameters": [
            {
              "name": "orderId",
              "in": "path",
              "description": "ID of order to return",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "status": {
                        "type": "string",
                        "example": "Recebido"
                      },
                      "createdAt": {
                        "type": "string",
                        "example": "2024-03-01T00:00:00.359Z"
                      },
                      "amount": {
                        "type": "number",
                        "example": 10
                      },
                      "customerId": {
                        "type": "integer",
                        "example": 1
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      "/api/v1/orders/{orderId}/status": {
        "patch": {
          "tags": [
            "orders"
          ],
          "summary": "Update order status",
          "description": "Update order status.",
          "parameters": [
            {
              "name": "orderId",
              "in": "path",
              "description": "ID of order to update",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "Update an existent order",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Pronto"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "status": {
                        "type": "string",
                        "example": "Pronto"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      }      
    }    
  }